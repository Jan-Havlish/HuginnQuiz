export async function call(api, prompt) {
  console.log("called");
  try {
    const response = await fetch(
      "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=" +
        api,
      {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          contents: [{ parts: [{ text: prompt }] }],
        }),
      },
    );

    if (!response.ok) {
      const errorData = await response.json();
      throw new Error(
        `API Error: ${response.status} - ${JSON.stringify(errorData)}`,
      );
    }

    const data = await response.json();
    let textResponse = data.candidates[0].content.parts[0].text;

    // Remove code block wrappers if present
    textResponse = textResponse.replace(/```json\n/g, "");
    textResponse = textResponse.replace(/```/g, "");

    // Attempt to parse the JSON
    try {
      const jsonResponse = JSON.parse(textResponse);
      console.log(jsonResponse, "here");
      return jsonResponse;
    } catch (jsonError) {
      console.error("JSON parsing error:", jsonError);
      console.log("Raw Response:", textResponse);
      //if json parse failed return the string to handle on the caller side.
      return textResponse;
    }
  } catch (error) {
    console.error("Fetch error:", error);
    throw error; // Rethrow the error to be handled by the caller
  }
}
